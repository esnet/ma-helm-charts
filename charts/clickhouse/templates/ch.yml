---
# ClickHouse Cluster with 3 shards and 2 replicas
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: ch-cluster
  namespace: {{ .Values.namespace }}
spec:
  configuration:
    zookeeper:
      nodes:
        - host: chk-keeper-cluster-keeper-cluster-0-0.{{ .Values.namespace }}.svc.cluster.local
          port: 2181
        - host: chk-keeper-cluster-keeper-cluster-0-1.{{ .Values.namespace }}.svc.cluster.local
          port: 2181
        - host: chk-keeper-cluster-keeper-cluster-0-2.{{ .Values.namespace }}.svc.cluster.local
          port: 2181
    clusters:
      - name: ch-cluster
        layout:
          shardsCount: 3
          replicasCount: 2
        schemaPolicy:
          replica: None
          shard: None

    # User configuration
    users:
      admin/password:
        valueFrom:
          secretKeyRef:
            name: clickhouse-users
            key: admin-password
      admin/networks/ip: "::/0"
      admin/profile: "default"
      admin/quota: "default"
      admin/access_management: "1"

      readonly_user/password:
        valueFrom:
          secretKeyRef:
            name: clickhouse-users
            key: readonly-password
      readonly_user/networks/ip: "::/0"
      readonly_user/profile: "readonly"
      readonly_user/quota: "default"

      backup_user/password:
        valueFrom:
          secretKeyRef:
            name: clickhouse-users
            key: backup-password
      backup_user/networks/ip: "::/0"
      backup_user/profile: "default"
      backup_user/quota: "default"

    # Profiles
    profiles:
      readonly/readonly: "1"
      readonly/max_memory_usage: "10000000000"
      default/max_memory_usage: "20000000000"

    settings:
      # Performance settings
      max_concurrent_queries: 100
      # Compression
      compression/case/method: zstd
      # Logging
      logger/level: information
      logger/console: "true"
      # Allow backups
      allow_experimental_database_replicated: "1"
{{- if .Values.config.tls_enabled }}
      # TLS/SSL Settings
      openSSL/server/certificateFile: /etc/clickhouse-server/certs/tls.crt
      openSSL/server/privateKeyFile: /etc/clickhouse-server/certs/tls.key
      openSSL/server/verificationMode: none
      openSSL/server/cacheSessions: "true"
      openSSL/server/disableProtocols: sslv2,sslv3
      openSSL/server/preferServerCiphers: "true"
{{- end }}

    files:
      # Custom config for distributed DDL
      config.d/distributed_ddl.xml: |
        <clickhouse>
          <distributed_ddl>
            <path>/clickhouse/task_queue/ddl</path>
          </distributed_ddl>
        </clickhouse>
{{- if .Values.config.tls_enabled }}
      # TLS configuration
      config.d/ssl.xml: |
        <clickhouse>
          <https_port>8443</https_port>
          <tcp_port_secure>9440</tcp_port_secure>
        </clickhouse>
{{- end }}

  defaults:
    templates:
      podTemplate: clickhouse-pod-template
      dataVolumeClaimTemplate: data-volume
      logVolumeClaimTemplate: log-volume
      serviceTemplate: chi-service-template
  templates:
    serviceTemplates:
      - name: chi-service-template
        generateName: "clickhouse-{chi}"
        spec:
          ports:
            - name: http
              port: 8123
              targetPort: 8123
            - name: https
              port: 8443
              targetPort: 8443
            - name: tcp
              port: 9000
              targetPort: 9000
            - name: tcp-secure
              port: 9440
              targetPort: 9440
            - name: interserver
              port: 9009
              targetPort: 9009
          type: ClusterIP
    podTemplates:
      - name: clickhouse-pod-template
        spec:
          containers:
            - name: clickhouse
              image: clickhouse/clickhouse-server:{{ .Values.config.clickhouse_version }}
              resources:
                requests:
                  memory: "{{ .Values.config.resources.ch.requests.memory }}"
                  cpu:  "{{ .Values.config.resources.ch.requests.cpu}}"
                limits:
                  memory: "{{ .Values.config.resources.ch.limits.memory }}"
                  cpu:  "{{ .Values.config.resources.ch.limits.cpu}}"
{{- if .Values.config.tls_enabled }}
              volumeMounts:
                - name: tls-certs
                  mountPath: /etc/clickhouse-server/certs
                  readOnly: true
          volumes:
            - name: tls-certs
              secret:
                secretName: {{ .Values.config.tls_cert_secret }}
{{- end }}

    volumeClaimTemplates:
      - name: data-volume
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.config.disk_volume_size }}
      - name: log-volume
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.config.log_volume_size }}
